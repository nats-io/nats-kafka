FROM --platform=$BUILDPLATFORM golang:1.21.6-bullseye as goreleaser

ARG GORELEASER_KEY
ENV GORELEASER_KEY=$GORELEASER_KEY

ARG GORELEASER_CONFIG=".goreleaser.yaml"
ENV GORELEASER_CONFIG=$GORELEASER_CONFIG

RUN <<EOT
    set -e

    echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' > /etc/apt/sources.list.d/goreleaser.list
    apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0

    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg > /usr/share/keyrings/githubcli-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" > /etc/apt/sources.list.d/github-cli.list

    GORELEASER_DEB="goreleaser"

    apt-get update
    if [ -n "${GORELEASER_KEY}" ]; then
        GORELEASER_DEB="goreleaser-pro"
    fi
    apt-get install -y \
      gh \
      jq \
      "${GORELEASER_DEB}"
    rm -rf /var/lib/apt/lists/*
EOT

FROM goreleaser

ARG CI

COPY --from=src / /go/src

WORKDIR /go/src

RUN <<EOT
  set -e

  GORELEASER_CMD="build"
  FLAGS="--clean"
  if [ -n "${GITHUB_TOKEN}" ]; then
    GORELEASER_CMD="release"
  else
    FLAGS="${FLAGS} --snapshot"
  fi
  if [ "${CI}" != "true" ]; then
    FLAGS="${FLAGS} --single-target"
  fi

  goreleaser ${GORELEASER_CMD} -f ${GORELEASER_CONFIG} ${FLAGS}
EOT
